name: main

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  build_linux:
    name: "linux build"
    runs-on: ubuntu-latest
    outputs:
      assets-path: ${{ steps.prepare.outputs.assets }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: build
        run: |
          docker buildx build . --platform linux/amd64,linux/arm64,linux/arm/v7 --output 'type=local,dest=dist'
      - name: prepare
        id: prepare
        run: |
          mkdir -p artifacts
          cp dist/linux_amd64/piper-phonemize_amd64.tar.gz artifacts/piper-phonemize_linux_x86_64.tar.gz
          cp dist/linux_arm64/piper-phonemize_arm64.tar.gz artifacts/piper-phonemize_linux_aarch64.tar.gz
          cp dist/linux_arm_v7/piper-phonemize_armv7.tar.gz artifacts/piper-phonemize_linux_armv7l.tar.gz
      - uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: artifacts/*

  build_windows:
    runs-on: windows-latest
    name: "windows build"
    steps:
      - uses: actions/checkout@v4
      - name: configure
        run: cmake -Bbuild -DCMAKE_INSTALL_PREFIX=_install/piper-phonemize
      - name: build
        run: cmake --build build --config Release
      - name: install
        run: cmake --install build
      - name: package
        run: |
          cd _install
          Compress-Archive -LiteralPath piper-phonemize -DestinationPath piper-phonemize_windows_amd64.zip
      - uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: _install/piper-phonemize_windows_amd64.zip

  build_macos:
    runs-on: macos-latest
    name: "mac build"
    strategy:
      matrix:
        arch: [x64, aarch64]
    steps:
      - uses: actions/checkout@v4
      - name: configure
        run: cmake -Bbuild -DCMAKE_INSTALL_PREFIX=_install/piper-phonemize
      - name: build
        run: cmake --build build --config Release
      - name: install
        run: cmake --install build
      - name: package
        run: |
          cd _install && \
          tar -czf piper-phonemize_macos_${{ matrix.arch }}.tar.gz piper-phonemize/
      - uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts-${{ matrix.arch }}
          path: _install/piper-phonemize_macos_${{ matrix.arch }}.tar.gz

  release:
    needs: [build_linux, build_windows, build_macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            artifacts/linux-artifacts/*
            artifacts/windows-artifacts/*
            artifacts/macos-artifacts-x64/*
            artifacts/macos-artifacts-aarch64/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
